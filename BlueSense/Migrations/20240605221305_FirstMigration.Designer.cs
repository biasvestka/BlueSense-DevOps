// <auto-generated />
using System;
using BlueSense.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace BlueSense.Migrations
{
    [DbContext(typeof(FIAPDbContext))]
    [Migration("20240605221305_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlueSense.Models.LeituraSensor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("NavioID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Protocolo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("RotaID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<bool>("Valor")
                        .HasColumnType("BOOLEAN");

                    b.HasKey("ID");

                    b.HasIndex("NavioID");

                    b.HasIndex("RotaID");

                    b.ToTable("Tb_LeiturasSensores");
                });

            modelBuilder.Entity("BlueSense.Models.Navio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("IMO")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ID");

                    b.ToTable("Tb_Navios");
                });

            modelBuilder.Entity("BlueSense.Models.NavioRotas", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("NavioID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("RotaID")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.HasIndex("NavioID");

                    b.HasIndex("RotaID");

                    b.ToTable("Tb_NavioRotas");
                });

            modelBuilder.Entity("BlueSense.Models.Notificacao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("LeituraSensorID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("UsuarioAutoridadeID")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ID");

                    b.HasIndex("LeituraSensorID");

                    b.HasIndex("UsuarioAutoridadeID");

                    b.ToTable("Tb_Notificacoes");
                });

            modelBuilder.Entity("BlueSense.Models.Rota", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Origem")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ID");

                    b.ToTable("Tb_Rotas");
                });

            modelBuilder.Entity("BlueSense.Models.Sensor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("NavioID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ID");

                    b.HasIndex("NavioID");

                    b.ToTable("Tb_Sensores");
                });

            modelBuilder.Entity("BlueSense.Models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("ID");

                    b.ToTable("Tb_Usuarios");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("BlueSense.Models.UsuarioAutoridade", b =>
                {
                    b.HasBaseType("BlueSense.Models.Usuario");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.ToTable("Tb_UsuariosAutoridade");
                });

            modelBuilder.Entity("BlueSense.Models.LeituraSensor", b =>
                {
                    b.HasOne("BlueSense.Models.Navio", "Navio")
                        .WithMany()
                        .HasForeignKey("NavioID");

                    b.HasOne("BlueSense.Models.Rota", "Rota")
                        .WithMany()
                        .HasForeignKey("RotaID");

                    b.Navigation("Navio");

                    b.Navigation("Rota");
                });

            modelBuilder.Entity("BlueSense.Models.NavioRotas", b =>
                {
                    b.HasOne("BlueSense.Models.Navio", "Navio")
                        .WithMany()
                        .HasForeignKey("NavioID");

                    b.HasOne("BlueSense.Models.Rota", "Rota")
                        .WithMany()
                        .HasForeignKey("RotaID");

                    b.Navigation("Navio");

                    b.Navigation("Rota");
                });

            modelBuilder.Entity("BlueSense.Models.Notificacao", b =>
                {
                    b.HasOne("BlueSense.Models.LeituraSensor", "LeituraSensor")
                        .WithMany()
                        .HasForeignKey("LeituraSensorID");

                    b.HasOne("BlueSense.Models.UsuarioAutoridade", "UsuarioAutoridade")
                        .WithMany()
                        .HasForeignKey("UsuarioAutoridadeID");

                    b.Navigation("LeituraSensor");

                    b.Navigation("UsuarioAutoridade");
                });

            modelBuilder.Entity("BlueSense.Models.Sensor", b =>
                {
                    b.HasOne("BlueSense.Models.Navio", "Navio")
                        .WithMany()
                        .HasForeignKey("NavioID");

                    b.Navigation("Navio");
                });

            modelBuilder.Entity("BlueSense.Models.UsuarioAutoridade", b =>
                {
                    b.HasOne("BlueSense.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("BlueSense.Models.UsuarioAutoridade", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
